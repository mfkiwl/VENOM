@startuml "VenomSimulator"

interface main_entrance
{
    start() 
}

class Interface implements main_entrance
{
    + StartVenom() 
    ' Build the system
    - SetVenomParameter() 
    - SaveVenomConfig()
    - BuildTrajectory()
    - BuildEnvironment()
    - BuildEnvPoints()
    - BuildEnvLines()
    - BuildEnvPlanes()
    - ShowTrajectory()
    - ShowEnvironment()
    - ShowReconstructedPoints()
    - ShowReconstructedLines()
    ' Start tracking
    - StartTracking()
    ' members
    + Trajectory * ptr_traject_
    + Track *ptr_track_
} 


Interface --> Trajectory
Interface --> Track
Interface -[dotted]-> MapPoint
Interface -[dotted]-> MapLine
Interface -[dotted]-> MapPlane


Track -[dotted]-> MapPoint
Track -[dotted]-> MapLine
Track -[dotted]-> MapPlane

Trajectory -[dotted]-> MapPoint
Trajectory -[dotted]-> MapLine
Trajectory -[dotted]-> MapPlane

class  Trajectory
{
    + Trajectory()
    + GenerateTrajectory(TrajectoryType,int)
    + CyclePoseGeneration()
    + SpherePoseGeneration()
    + GenerateCycleKeyFrames()
    + GenerateSphereKeyFrames()

}

class Track
{
    'feature detected in each camera
    + PointFeatureDetection()
    + LineFeatureDetection()

    'triangulate 
    + Triangulation()
    + TrackLastFrame()
    + TrackVenom()
    + PoseOptimization()
}

class MapPoint
{
    + MapPoint()
    + GenerateMapPoint()
    ' bundle the relationships between mp and frames
    + DoubleConnect()
}

class MapLine
{
    + MapLine()
    + GenerateMapLinet()
    ' bundle the relationships between mp and frames
    + DoubleConnect()
    
}
@enduml